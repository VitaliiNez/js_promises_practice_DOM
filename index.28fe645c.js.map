{"mappings":"ACEA,IAAM,EAAsB,SAAC,CAAA,CAAU,CAAvC,EACE,IAAM,EAAsB,SAAS,aAAa,CAAC,OAEnD,EAAoB,SAAS,CAAC,GAAG,CAAC,GAClC,EAAoB,WAAW,CAAG,EAClC,EAAoB,YAAY,CAAC,UAAW,gBAC5C,SAAS,IAAI,CAAC,MAAM,CAAC,EACvB,EAEM,EAAe,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,SAAS,gBAAgB,CAAC,QAAS,WACjC,EAAQ,6BACV,GAEA,WAAW,WACT,EAAO,AAAI,MAAM,8BACnB,EAAG,IACL,GAEA,EAAa,KAAK,CAAC,SAAC,CAApB,EACE,EAAoB,QAAS,EAAS,OAAO,CAC/C,GAEA,EAAa,IAAI,CAAC,SAAC,CAAnB,EACE,EAAoB,UAAW,EACjC,GAYA,AAVsB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA5C,EACE,SAAS,gBAAgB,CAAC,QAAS,WACjC,EAAQ,8BACV,GAEA,SAAS,gBAAgB,CAAC,cAAe,WACvC,EAAQ,8BACV,EACF,GAEc,IAAI,CAAC,SAAC,CAApB,EACE,EAAoB,UAAW,EACjC,GAuBA,AArBqB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,IAAI,EAAa,CAAA,EACb,EAAY,CAAA,EAEhB,SAAS,gBAAgB,CAAC,QAAS,WACjC,EAAY,CAAA,EAER,GAAc,GAChB,EAAQ,6BAEZ,GAEA,SAAS,gBAAgB,CAAC,cAAe,WACvC,EAAa,CAAA,EAET,AAAc,GAChB,EAAQ,6BAEZ,EACF,GAEa,IAAI,CAAC,SAAC,CAAnB,EACE,EAAoB,UAAW,EACjC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar notificationHandler = function(setClass, message) {\n    var notificationElement = document.createElement(\"div\");\n    notificationElement.classList.add(setClass);\n    notificationElement.textContent = message;\n    notificationElement.setAttribute(\"data-qa\", \"notification\");\n    document.body.append(notificationElement);\n};\nvar firstPromise = new Promise(function(resolve, reject) {\n    document.addEventListener(\"click\", function() {\n        resolve(\"First promise was rejected\");\n    });\n    setTimeout(function() {\n        reject(new Error(\"First promise was rejected\"));\n    }, 3000);\n});\nfirstPromise.catch(function(response) {\n    notificationHandler(\"error\", response.message);\n});\nfirstPromise.then(function(response) {\n    notificationHandler(\"success\", response);\n});\nvar secondPromise = new Promise(function(resolve, reject) {\n    document.addEventListener(\"click\", function() {\n        resolve(\"Second promise was resolved\");\n    });\n    document.addEventListener(\"contextmenu\", function() {\n        resolve(\"Second promise was resolved\");\n    });\n});\nsecondPromise.then(function(response) {\n    notificationHandler(\"success\", response);\n});\nvar thirdPromise = new Promise(function(resolve, reject) {\n    var rightClick = false;\n    var leftClick = false;\n    document.addEventListener(\"click\", function() {\n        leftClick = true;\n        if (rightClick && leftClick) resolve(\"Third promise was resolved\");\n    });\n    document.addEventListener(\"contextmenu\", function() {\n        rightClick = true;\n        if (rightClick && leftClick) resolve(\"Third promise was resolved\");\n    });\n});\nthirdPromise.then(function(response) {\n    notificationHandler(\"success\", response);\n});\n\n//# sourceMappingURL=index.28fe645c.js.map\n","'use strict';\n\nconst notificationHandler = (setClass, message) => {\n  const notificationElement = document.createElement('div');\n\n  notificationElement.classList.add(setClass);\n  notificationElement.textContent = message;\n  notificationElement.setAttribute('data-qa', 'notification');\n  document.body.append(notificationElement);\n};\n\nconst firstPromise = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => {\n    resolve('First promise was rejected');\n  });\n\n  setTimeout(() => {\n    reject(new Error('First promise was rejected'));\n  }, 3000);\n});\n\nfirstPromise.catch((response) => {\n  notificationHandler('error', response.message);\n});\n\nfirstPromise.then((response) => {\n  notificationHandler('success', response);\n});\n\nconst secondPromise = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => {\n    resolve('Second promise was resolved');\n  });\n\n  document.addEventListener('contextmenu', () => {\n    resolve('Second promise was resolved');\n  });\n});\n\nsecondPromise.then((response) => {\n  notificationHandler('success', response);\n});\n\nconst thirdPromise = new Promise((resolve, reject) => {\n  let rightClick = false;\n  let leftClick = false;\n\n  document.addEventListener('click', () => {\n    leftClick = true;\n\n    if (rightClick && leftClick) {\n      resolve('Third promise was resolved');\n    }\n  });\n\n  document.addEventListener('contextmenu', () => {\n    rightClick = true;\n\n    if (rightClick && leftClick) {\n      resolve('Third promise was resolved');\n    }\n  });\n});\n\nthirdPromise.then((response) => {\n  notificationHandler('success', response);\n});\n"],"names":["notificationHandler","setClass","message","notificationElement","document","createElement","classList","add","textContent","setAttribute","body","append","firstPromise","Promise","resolve","reject","addEventListener","setTimeout","Error","catch","response","then","secondPromise","thirdPromise","rightClick","leftClick"],"version":3,"file":"index.28fe645c.js.map"}